/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
	class Solution {
	    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
	    	
	    	int value=0;
	    	int carry=0;
	    	int size1=0;
	    	int size2=0;
            ListNode l1head=l1;
	    	ListNode l2head=l2;
	    

	    	ListNode head = null ;
            ListNode temp=null;
           while(l1!=null|l2!=null)
            {   
                value=carry;
                if(l1!=null)
                {
                    value=value+l1.val;
                    l1=l1.next;
                }
                if(l2!=null)
                {
                    value=l2.val+value;
                    l2=l2.next;     
                }
                carry = value / 10;
                value=value%10;
                    ListNode node = new ListNode(value);
                    if(temp==null)
                        {
                            temp=head=node;
                        }
                    else
                        {
                            temp.next=node;
                            temp=temp.next;
                        }
            
            }
            if (carry>0)
            {
                ListNode node = new ListNode(carry);
                temp.next=node;
                temp=temp.next;
                
            }

           


            return head;
	       
	}
	
}
